// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using viecLam24hBE.Commons;

#nullable disable

namespace viecLam24hBE.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240222040056_Create DB AG")]
    partial class CreateDBAG
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("viecLam24hBE.Models.ApplicantProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CV_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CareerGoals")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformationTechnology")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("JobName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobTypeId")
                        .HasColumnType("int");

                    b.Property<string>("NameReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PositionReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WorkLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingForm")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ApplicantProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CareerGoals = "Thống trị thế giới",
                            Degree = "2",
                            Experence = "4",
                            IsPublic = true,
                            JobName = "CEO",
                            JobTypeId = 3,
                            Salary = 3000.0,
                            UserId = 1,
                            WorkLocation = "Hà Nội",
                            WorkingForm = "1"
                        },
                        new
                        {
                            Id = 2,
                            CareerGoals = "Trở nên chuyên nghiệp hơn trong ngành Marketing",
                            Degree = "3",
                            Experence = "3",
                            IsPublic = false,
                            JobName = "Marketing",
                            JobTypeId = 4,
                            Salary = 5000.0,
                            UserId = 1,
                            WorkLocation = "Hà Nội",
                            WorkingForm = "2"
                        });
                });

            modelBuilder.Entity("viecLam24hBE.Models.JobApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsSave")
                        .HasColumnType("bit");

                    b.Property<int?>("JobPostId")
                        .HasColumnType("int");

                    b.Property<string>("ProfileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("JobPostId");

                    b.ToTable("JobApplications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicantId = 1,
                            CreatedAt = new DateTime(2024, 2, 16, 11, 0, 55, 925, DateTimeKind.Local).AddTicks(7368),
                            JobPostId = 11,
                            ProfileName = "Hồ sơ ứng tuyển vị trí CEO",
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            ApplicantId = 2,
                            CreatedAt = new DateTime(2024, 2, 10, 11, 0, 55, 925, DateTimeKind.Local).AddTicks(7383),
                            JobPostId = 11,
                            ProfileName = "Hồ sơ ứng tuyển vị trí Marketing",
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            ApplicantId = 1,
                            CreatedAt = new DateTime(2024, 2, 20, 11, 0, 55, 925, DateTimeKind.Local).AddTicks(7385),
                            JobPostId = 12,
                            ProfileName = "Hồ sơ ứng tuyển vị trí Junior",
                            Status = false
                        });
                });

            modelBuilder.Entity("viecLam24hBE.Models.JobPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JobTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int>("MinAge")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("JobPosts");
                });

            modelBuilder.Entity("viecLam24hBE.Models.JobType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Hành chính - Thư Kí"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Khách sạn - Nhà hàng - Du lịch"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Bán buôn - Bán lẻ - Quản lý cửa hàng"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Marketing"
                        },
                        new
                        {
                            Id = 5,
                            Type = "Kinh doanh"
                        },
                        new
                        {
                            Id = 6,
                            Type = "Kế toán"
                        },
                        new
                        {
                            Id = 7,
                            Type = "Tài chính - Đầu tư"
                        },
                        new
                        {
                            Id = 8,
                            Type = "Tài chính - Đầu tư"
                        },
                        new
                        {
                            Id = 9,
                            Type = "Kiểm toán - Khoa học kĩ thuật"
                        },
                        new
                        {
                            Id = 10,
                            Type = "Nghề nghiệp khác"
                        });
                });

            modelBuilder.Entity("viecLam24hBE.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 22, 11, 0, 55, 925, DateTimeKind.Local).AddTicks(7819),
                            Description = "Nhà tuyển dụng nhân sự cho các công ty",
                            Name = "Người tuyển dụng"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 22, 11, 0, 55, 925, DateTimeKind.Local).AddTicks(7820),
                            Description = "Người tìm việc làm thông qua các bài đăng từ người tuyển dụng",
                            Name = "Người tìm việc"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 22, 11, 0, 55, 925, DateTimeKind.Local).AddTicks(7821),
                            Description = "Admin",
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("viecLam24hBE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Address = "Hà Nội",
                            CompanyName = "Tổng Công Ty Xây Dựng Công trình Giao Thông 6 - Công Ty Cổ Phần",
                            CreatedAt = new DateTime(2024, 2, 22, 11, 0, 55, 925, DateTimeKind.Local).AddTicks(7800),
                            Dob = new DateTime(2001, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Hieunv@gmail.com",
                            Password = "123",
                            Phone = "0967755934",
                            RoleId = 1,
                            Sex = "0",
                            UserName = "Nguyễn Văn Hiếu"
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            Address = "Quảng Ninh",
                            CompanyName = "Công Ty Cổ Phần Dịch Vụ Thương mại Tổng Hợp VinCommerce",
                            CreatedAt = new DateTime(2024, 2, 22, 11, 0, 55, 925, DateTimeKind.Local).AddTicks(7807),
                            Dob = new DateTime(2008, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Chint@gmail.com",
                            Password = "123",
                            RoleId = 2,
                            Sex = "1",
                            UserName = "Nguyễn Thùy Chi"
                        });
                });

            modelBuilder.Entity("viecLam24hBE.Models.ApplicantProfile", b =>
                {
                    b.HasOne("viecLam24hBE.Models.User", "User")
                        .WithMany("ApplicantProfiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("viecLam24hBE.Models.JobApplication", b =>
                {
                    b.HasOne("viecLam24hBE.Models.ApplicantProfile", "ApplicantProfile")
                        .WithMany("JobApplications")
                        .HasForeignKey("ApplicantId");

                    b.HasOne("viecLam24hBE.Models.JobPost", "JobPost")
                        .WithMany("JobApplications")
                        .HasForeignKey("JobPostId");

                    b.Navigation("ApplicantProfile");

                    b.Navigation("JobPost");
                });

            modelBuilder.Entity("viecLam24hBE.Models.JobPost", b =>
                {
                    b.HasOne("viecLam24hBE.Models.JobType", "JobType")
                        .WithMany("JobPosts")
                        .HasForeignKey("JobTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("viecLam24hBE.Models.User", "User")
                        .WithMany("JobPosts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("viecLam24hBE.Models.User", b =>
                {
                    b.HasOne("viecLam24hBE.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("viecLam24hBE.Models.ApplicantProfile", b =>
                {
                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("viecLam24hBE.Models.JobPost", b =>
                {
                    b.Navigation("JobApplications");
                });

            modelBuilder.Entity("viecLam24hBE.Models.JobType", b =>
                {
                    b.Navigation("JobPosts");
                });

            modelBuilder.Entity("viecLam24hBE.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("viecLam24hBE.Models.User", b =>
                {
                    b.Navigation("ApplicantProfiles");

                    b.Navigation("JobPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
